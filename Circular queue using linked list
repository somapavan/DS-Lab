//Program to impleme circular queue using linked list 
#include<stdio.h> //standard input output header file
#include<stdlib.h> //standard library header file 
struct node
{
  int data; //initializing the data
  struct node *next; //initializing the  next
};
struct node *front=-1; //initializing the front value
struct node *rear=-1; //initializing the rear value

void enqueue(int x) //endueue function
{
   struct node *newnode;
   newnode=(struct node *)malloc(sizeof(struct node)); //malloc function
   newnode->data=x;
   newnode->next=0;
   if(rear==-1) //checks the condition 
   {
   front=rear=newnode;
   rear->next=front;
   }
   else
   {
   rear->next=newnode;
   rear=newnode;
   rear->next=front;
   }
}   
void dequeue() //dequeue function
{
  struct node *temp;
  temp=front;
  if((front==-1)&&(rear==-1)) //checks the condition 
  {
    printf("Queue is empty");
  }
  else if(front==rear) //checks the condition 
  {
     front=rear=-1;
     free(temp);
  }
  else
  {
     front=front->next;
     rear->next=front;
     free(temp);
  }
}
void display() //display function
{
struct node* t;
t = front;
if((front==NULL)&&(rear==NULL)) //checks the condition 
printf("\nQueue is Empty");
else{
do{
printf("\n%d",t->data);
t = t->next;
}while(t != front);
} 
}
int main()
{
  int choice,n,i,data; //initalizing the variables
  while(1) //while loop
  {
    printf("\nSelect the operation\n"); //prints the statement
    printf("1.Insert\n2.Delete\n3.Display\n4.Exit\n"); //prints the statement
    scanf("%d",&choice); //scans the input value
    switch(choice)
    {
      case 1: printf("\nEnter the number of data:"); //prints the statement
	      scanf("%d",&n); //scans the value
	      printf("\nEnter your data"); //prints the statement
              i=0;
		while(i<n){ //while loop
		scanf("%d",&data); //scans the input data
		enqueue(data);
	        i++; //increments the value
		}
		break;
      case 2: dequeue(); //dequeue function
              break;
      case 3: display(); //display fuction
              break;
      case 4: exit(0); //exit fuction 
      default: printf("Invalid choice"); //prints the statement
              break;
     }   
   }
  return 0;
  
}
