#include<stdio.h>
#include<stdlib.h>
#define max 5
void insert();
void delete();
void display();
int queue[max];
struct node
{
    int data;
    struct node *next
};
struct node *front,*rear;
void insert()
{
    struct node *ptr;
    int item;
    ptr=(struct node*)malloc(sizeof(struct node));
    if(ptr==NULL)
    {
        printf("Overflow\n");
        return;
    }
    else
    {
        printf("Enter the element to insert:\n");
        scanf("%d",&item);
        ptr->data=item;
        if(front==NULL)
        {
            front=rear=ptr;
            front->next=NULL;
            rear->next=NULL;
        } 
        else
        {
            rear->next=ptr;
            rear=ptr;
            rear->next=NULL;
        }
    }
}
void delete()
{
    struct node *ptr=(struct node*)malloc(sizeof(struct node));
    if(front==NULL)
    {
        printf("Underflow\n");
        return;
    }   
    else
    {
        ptr=front;
        printf("Deleted element %d\n",ptr->data);
        front=front->next;
        free(ptr);
    }
}
void display()
{
    struct node *ptr;
    ptr=front;
    if(ptr==NULL)
    {
        printf("Underflow\n");
        return;
    }
    else
    {
        printf("Printing the elements of queue:\n");
        while(ptr!=NULL)
        {
            printf("%d\n",ptr->data);
            ptr=ptr->next;
        }
    }
}
int main()
{
    int choice;
    while(1)
    {
        printf("Operations performed by queue:\n");
        printf("1.Insert\n2.Delete\n3.Display\n4.Exit\n");
        printf("Enter the choice\n");
        scanf("%d",&choice);
        switch (choice)
        {
            case 1:insert();
            break;
            case 2:delete();
            break;
            case 3:display();
            break;
            case 4:exit(0);
            default:printf("Invalid choice\n");
        }
    }
}
